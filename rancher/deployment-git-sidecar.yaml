apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-tracker-app
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portfolio-tracker
      component: app
  template:
    metadata:
      labels:
        app: portfolio-tracker
        component: app
    spec:
      initContainers:
      # Initial git clone to ensure code is available before app starts
      - name: git-clone
        image: alpine/git:latest
        command:
        - sh
        - -c
        - |
          echo "üîÑ Initial git clone for app startup..."

          # Get configuration from environment
          REPO="https://github.com/adamchilders/personal-portfolio-planner.git"
          BRANCH="${GIT_BRANCH:-main}"

          echo "üìã Configuration:"
          echo "   Repository: $REPO"
          echo "   Branch: $BRANCH"

          # Clone repository
          echo "üì• Cloning repository..."
          cd /app-code
          git clone --depth 1 --branch "$BRANCH" "$REPO" current || {
            echo "‚ùå Failed to clone repository"
            exit 1
          }

          echo "‚úÖ Initial clone completed successfully"
          echo "üìÅ Repository contents:"
          ls -la /app-code/current/
        env:
        - name: GIT_BRANCH
          valueFrom:
            configMapKeyRef:
              name: portfolio-config
              key: git-branch
        volumeMounts:
        - name: app-code
          mountPath: /app-code
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"

      containers:
      # Main application container
      - name: app
        image: adamchilders/portfolio-tracker:v2.0.1
        ports:
        - containerPort: 80
          name: http
        env:
        - name: APP_ENV
          value: "production"
        - name: APP_DEBUG
          value: "false"
        - name: APP_URL
          value: "https://portfolio.adamchilders.com"
        - name: DB_HOST
          value: "mysql"
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          value: "portfolio_tracker"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: db-password
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: CACHE_DRIVER
          value: "redis"
        - name: SESSION_DRIVER
          value: "redis"
        - name: QUEUE_CONNECTION
          value: "redis"
        volumeMounts:
        - name: app-code
          mountPath: /var/www/html
          subPath: current
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      # Git sync sidecar - continuously pulls updates
      - name: git-sync
        image: alpine/git:latest
        command:
        - sh
        - -c
        - |
          echo "üîÑ Starting git-sync sidecar..."

          # Get configuration from environment
          REPO="https://github.com/adamchilders/personal-portfolio-planner.git"
          BRANCH="${GIT_BRANCH:-main}"
          INTERVAL="${GIT_SYNC_INTERVAL:-60}"

          echo "üìã Configuration:"
          echo "   Repository: $REPO"
          echo "   Branch: $BRANCH"
          echo "   Sync Interval: ${INTERVAL}s"

          # Wait for initial clone to be ready
          echo "‚è≥ Waiting for initial clone to be ready..."
          while [ ! -d "/app-code/current/.git" ]; do
            echo "   Waiting for git repository..."
            sleep 2
          done
          echo "‚úÖ Repository found, starting sync loop"

          # Continuous sync loop
          while true; do
            echo "üîÑ Syncing at $(date)..."
            cd /app-code/current

            # Fetch and reset to latest
            git fetch origin "$BRANCH" && git reset --hard "origin/$BRANCH" || {
              echo "‚ö†Ô∏è Sync failed, retrying in ${INTERVAL}s..."
            }

            echo "‚úÖ Sync completed, sleeping for ${INTERVAL}s..."
            sleep "$INTERVAL"
          done
        env:
        - name: GIT_BRANCH
          valueFrom:
            configMapKeyRef:
              name: portfolio-config
              key: git-branch
        - name: GIT_SYNC_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: portfolio-config
              key: git-sync-interval
        volumeMounts:
        - name: app-code
          mountPath: /app-code
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      volumes:
      - name: app-code
        emptyDir: {}
      
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-tracker-app-service
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: app
spec:
  selector:
    app: portfolio-tracker
    component: app
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portfolio-tracker-ingress
  namespace: portfolio-tracker
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - portfolio.adamchilders.com
    secretName: portfolio-tracker-tls
  rules:
  - host: portfolio.adamchilders.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: portfolio-tracker-app-service
            port:
              number: 80
