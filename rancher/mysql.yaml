apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: mysql
data:
  my.cnf: |
    [mysqld]
    default-authentication-plugin=mysql_native_password
    bind-address=0.0.0.0
    max_connections=200
    innodb_buffer_pool_size=256M
    innodb_log_file_size=64M
    slow_query_log=1
    slow_query_log_file=/var/log/mysql/slow.log
    long_query_time=2

    # Character set and collation
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci

    # Security settings
    skip-name-resolve

    # Performance settings (query cache removed in MySQL 8.0)
    innodb_flush_log_at_trx_commit=2
    sync_binlog=0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: portfolio-tracker
      component: mysql
  template:
    metadata:
      labels:
        app: portfolio-tracker
        component: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: db-password
        - name: MYSQL_DATABASE
          value: "portfolio_tracker"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: db-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: db-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-config
        configMap:
          name: mysql-config
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: mysql
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  selector:
    app: portfolio-tracker
    component: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: portfolio-tracker
      component: redis
  template:
    metadata:
      labels:
        app: portfolio-tracker
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        - --appendfsync
        - everysec
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: portfolio-secrets
              key: redis-password
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: portfolio-tracker
  labels:
    app: portfolio-tracker
    component: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: portfolio-tracker
    component: redis
